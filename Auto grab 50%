local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera

-- GUI
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "AutoShootGUI"
gui.ResetOnSpawn = false

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 120, 0, 40)
button.Position = UDim2.new(0, 20, 0, 100)
button.Text = "Shoot"
button.Parent = gui
button.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
button.TextColor3 = Color3.new(1, 1, 1)
button.TextScaled = true

local shootRange = 500
local weaponName = "Sniper"

-- Verifica se inimigo está visível (sem parede)
local function isEnemyVisible(char)
	if not char then return false end

	local origin = camera.CFrame.Position
	local direction = (char:GetModelCFrame().p - origin)
	local rayParams = RaycastParams.new()
	rayParams.FilterType = Enum.RaycastFilterType.Blacklist
	rayParams.FilterDescendantsInstances = {player.Character}
	rayParams.IgnoreWater = true

	local result = workspace:Raycast(origin, direction, rayParams)
	return result and result.Instance and result.Instance:IsDescendantOf(char)
end

-- Retorna inimigo visível mais próximo do centro da tela
local function getBestVisibleEnemy()
	local bestChar = nil
	local closestToCenter = math.huge

	for _, otherPlayer in pairs(game.Players:GetPlayers()) do
		if otherPlayer ~= player and otherPlayer.Team ~= player.Team then
			local char = otherPlayer.Character
			if char and isEnemyVisible(char) then
				-- Pega o centro do modelo usando GetModelCFrame
				local modelCenter = char:GetModelCFrame().p
				local screenPos = camera:WorldToViewportPoint(modelCenter)
				local distFromCenter = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)).Magnitude

				if distFromCenter < closestToCenter then
					closestToCenter = distFromCenter
					bestChar = char
				end
			end
		end
	end

	return bestChar
end

-- Mira no centro exato do modelo
local function getAimPosition(char)
	if char then
		return char:GetModelCFrame().p + Vector3.new(0, 0.3, 0) -- Pequeno ajuste para cima para compensar
	end
	return nil
end

-- Atirar
button.MouseButton1Click:Connect(function()
	local target = getBestVisibleEnemy()
	if target then
		local aimPos = getAimPosition(target)
		if aimPos then
			local args = {
				[1] = aimPos,
				[2] = weaponName
			}
			game:GetService("ReplicatedStorage")
				:WaitForChild("Events")
				:WaitForChild("Remote")
				:WaitForChild("ShotTarget")
				:FireServer(unpack(args))
			return
		end
	end
	warn("Nenhum inimigo visível para atirar.")
end)
